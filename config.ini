[scenesplitter]
#Adjust divisor that determines adjusted RGB Threshold
Median Divisor = 3

#minimum number of seconds
Clip Minimum = 4

#maximum dB threshold of silence
Silence Threshold = -50

#Directory for temporary files
Temp Directory = ./

[metatagger]
#name of subdirectory to the working directory to deposit processed files
Output Subdirectory = _tagged

[analysis]
OpenAI API Key = 
Tesseract Executable = 
Tesseract Confidence = 0.75
YOLO Confidence = 0.01
Video Language = en
JSON File = 

ChatGPT Role = Your purpose is to identify clips from video broadcasts based on metadata, text extracted from on-screen, and an audio transcript. The clip in question is most likely a commercial, PSA or news clip. 

ChatGPT Prompt = Using the provided context, identify the video clip and reply as a JSON dictionary with the following key/value pairs if able:\n\"Air Date\" with the value of the date recorded in YYYY-MM-DD format\n\"Network/Station\" with the Station value\n\"Description\" fill this value with your description of what the clip is based on the available information\n\"Tags\" the value of this one should be a comma separated list of category tags relevent to the clip content. Also include any mentioned tv networks, holidays or seasons\n\"Title\" suggest a short title for the clip based on what is being advertised or promoted, use a descriptor in the title like 'promo' or 'ad' to indicate what type of clip it is.\n\"Filename\", for this one use the title,the station and the date. Use hyphens in place of spaces, remove or replace any special characters that aren't supported in file names and separate the date at the end from the rest with an underscore such as in following: \"Clip-Title-Station_YYYY-MM-DD\"

[social]
JSON File = 
Video Directory = 
Temp Directory = 

#RGB value at which scenes are cut
RGB Threshold = 16

#minimum number of seconds
Clip Minimum = 20

#maximum number of seconds
Clip Maximum = 140

#maximum file size in MB
File Size Maximum = 40

#seconds to ignore at front of file
Front Buffer = 2 

#seconds to ignore at end of file
End Buffer = 2 

#minutes between posts
Time Between = 30

[twitter]
Username = 
Consumer Key = 
Consumer Secret = 
Access Token = 
Access Secret = 

[tumblr]
Consumer Key = 
Consumer Secret = 
Access Token = 
Access Secret = 

[mastodon]
Instance URL = 
Access Token = 

[facebook]
Page ID = 
Access Token = 

[discord]
Access Token = 
Channels = 
